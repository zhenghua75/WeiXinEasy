//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HappyPhoto.srHappyPhoto {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="srHappyPhoto.wsHappyPhotoSoap")]
    public interface wsHappyPhotoSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePrintCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreatePrintCode(int iAmount, string strSIteCode, string strClientCode, string strStart, string strEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPrintPhoto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPrintPhoto(string strSiteCode, string strClientCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePrintState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdatePrintState(string strPhotoID, string strState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPrintCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPrintCode(string strSiteCode, string strState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePrintCodeState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdatePrintCodeState(string strPrintCode, string strState);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsHappyPhotoSoapChannel : HappyPhoto.srHappyPhoto.wsHappyPhotoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsHappyPhotoSoapClient : System.ServiceModel.ClientBase<HappyPhoto.srHappyPhoto.wsHappyPhotoSoap>, HappyPhoto.srHappyPhoto.wsHappyPhotoSoap {
        
        public wsHappyPhotoSoapClient() {
        }
        
        public wsHappyPhotoSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsHappyPhotoSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsHappyPhotoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsHappyPhotoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CreatePrintCode(int iAmount, string strSIteCode, string strClientCode, string strStart, string strEnd) {
            return base.Channel.CreatePrintCode(iAmount, strSIteCode, strClientCode, strStart, strEnd);
        }
        
        public System.Data.DataSet GetPrintPhoto(string strSiteCode, string strClientCode) {
            return base.Channel.GetPrintPhoto(strSiteCode, strClientCode);
        }
        
        public bool UpdatePrintState(string strPhotoID, string strState) {
            return base.Channel.UpdatePrintState(strPhotoID, strState);
        }
        
        public System.Data.DataSet GetPrintCode(string strSiteCode, string strState) {
            return base.Channel.GetPrintCode(strSiteCode, strState);
        }
        
        public bool UpdatePrintCodeState(string strPrintCode, string strState) {
            return base.Channel.UpdatePrintCodeState(strPrintCode, strState);
        }
    }
}
